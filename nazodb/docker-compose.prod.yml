# docker-composeのバージョンを指定
version: "3.3"

# db(Postgres),app(Django)のコンテナを作成
services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=posudostgres
      - POSTGRES_USER=postgres-prod
      - POSTGRES_PASSWORD=postgres-prod
    volumes:
      - db_data:/var/lib/postgresql/data


  app:
    container_name: app
    build:
      context: ./django
    volumes:
      - ./django:/code
      - ./static:/static
      - ./django/media:/media
    # 8000番ポートをNginx側が接続できるよう開く
    expose:
      - "8000"
    # シェルスクリプトを実行
    command: bash -c "python manage.py migrate && gunicorn --workers 4  --bind  0.0.0.0:8000 nozopj.wsgi:application"

    # コンテナ内の環境変数を.env.prodを使って設定
    env_file:
      - .env.prod
    depends_on:
      - db

  web:
    # コンテナ名をwebに指定
    container_name: web
    # NginxのDockerfileをビルドする
    build:
      # ビルドコンテキストはカレントディレクトリ
      context: .
      dockerfile: ./nginx/Dockerfile
    # ボリュームを指定
    # ローカルの/staticをコンテナの/staticにマウントする
    volumes:
      - ./static:/static
      - ./django/media:/media
    # ローカルの80番ボートをコンテナの80番ポートとつなぐ
    ports:
      - "80:80"
    # 先にappを起動してからwebを起動する
    depends_on:
      - app
volumes:
  db_data:
  static:
  media:
